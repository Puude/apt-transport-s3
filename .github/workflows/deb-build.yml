name: release deb package
permissions:
  contents: write

on:
  workflow_dispatch:
  push:
    tags:
      - 'v*.*.*'
env:
  APP_NAME: 'apt-transport-s3'
  MAINTAINER: 'ZyGo'
  MAINTAINER_EMAIL: 'support@zygo.be'
  DESC: 's3 apt method. Orignal https://github.com/MayaraCloud/apt-transport-s3'

jobs:
  build-linux-packages:
    runs-on: ubuntu-latest
    steps:
      - name: checkout
        uses: actions/checkout@v2 

      - name: create artifacts
        run: |
            mkdir -p .debpkg/usr/lib/apt/methods
            cp s3 .debpkg/usr/lib/apt/methods/s3
            chmod +x .debpkg/usr/lib/apt/methods/s3

      - name: create deb
        uses: jiro4989/build-deb-action@v3
        with:
          package: ${{env.APP_NAME}}
          package_root: .debpkg
          maintainer: ${{env.MAINTAINER_EMAIL}}
          version: ${{ github.ref }} # refs/tags/v*.*.*
          arch: "amd64"
          desc: ${{env.DESC}}

      - name: upload artifacts
        uses: actions/upload-artifact@v4
        with:
          name: artifact-deb
          path: |
            ./*.deb

  create-release:
    runs-on: ubuntu-latest
    needs: build-linux-packages
    permissions: write-all
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - name: Create Release
        id: create-release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref }}
          release_name: ${{ github.ref }}
          draft: false
          prerelease: false
      - name: Write upload_url to file
        run: echo '${{ steps.create-release.outputs.upload_url }}' > upload_url.txt

      - uses: actions/upload-artifact@v4
        with:
          name: create-release
          path: upload_url.txt

  upload-linux-packages:
    runs-on: ubuntu-latest
    needs: create-release
    strategy:
      matrix:
        include:
          - pkg: deb
            asset_content_type: application/vnd.debian.binary-package
    steps:
      - uses: actions/download-artifact@v4
        with:
          name: artifact-${{ matrix.pkg }}

      - uses: actions/download-artifact@v4
        with:
          name: create-release

      - id: vars
        run: |
          echo "::set-output name=upload_url::$(cat upload_url.txt)"
          echo "::set-output name=asset_name::$(ls *.${{ matrix.pkg }} | head -n 1)"

      - name: Upload Release Asset
        id: upload-release-asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.vars.outputs.upload_url }}
          asset_path: ${{ steps.vars.outputs.asset_name }}
          asset_name: ${{ steps.vars.outputs.asset_name }}
          asset_content_type: ${{ matrix.asset_content_type }}